unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, VclTee.TeeGDIPlus, Vcl.StdCtrls,
  VclTee.TeEngine, VclTee.Series, Vcl.ExtCtrls, VclTee.TeeProcs, VclTee.Chart;

type
  TForm1 = class(TForm)
    Chart1: TChart;
    Series1: TPointSeries;
    Button1: TButton;
    Label1: TLabel;
    Edit1: TEdit;
    Label2: TLabel;
    Edit2: TEdit;
    Label3: TLabel;
    Edit3: TEdit;
    Label4: TLabel;
    Edit4: TEdit;
    Label5: TLabel;
    Edit5: TEdit;
    Label6: TLabel;
    Edit6: TEdit;
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.Button1Click(Sender: TObject);
var
  dt, max, a, b, c, d, x, x1, x2, x3, r: Real;
  Alf, Bet, Sig, Gam, a1, b1, c1, d1: Integer;
  i, j, n: Integer;
  xx: array [0 .. 7] of Real;
begin
  Series1.Clear;

  dt := StrToFloat(Edit1.Text);
  n := StrToInt(Edit6.Text);
  max := 0;

  for Alf := 1 to 10 do
    for Bet := 1 to 10 do
      for Gam := 1 to 10 do
        for Sig := 1 to 10 do
        begin
          a := Sig * dt;
          b := Gam * dt + Sig * Bet - Alf * Bet;
          c := Gam * Bet;
          d := b * b - 4 * a * c;

          if d >= 0 then
          begin
            x1 := 0;
            x2 := (-b + Sqrt(d)) / (2 * a);
            x3 := (-b - Sqrt(d)) / (2 * a);

            r := Sqrt(Sqr(x2 - x1) + Sqr(x3 - x2));

            if (r > max) and (r < 30) then
//            if (x2 > 0) and (x3 > 0) then
            begin
              max := r;
              a1 := Alf;
              b1 := Bet;
              c1 := Sig;
              d1 := Gam;
              xx[0] := x1;
              xx[1] := x2;
              xx[2] := x3;
            end;
          end;
        end;

  Alf := a1;
  Bet := b1;
  Sig := c1;
  Gam := d1;

  xx[3] := xx[0] + (random(2) + 1);
  xx[4] := xx[1] - (random(2) + 1);
  xx[5] := xx[1] + (random(2) + 1);
  xx[6] := xx[2] - (random(2) + 1);
  xx[7] := xx[2] + (random(2) + 1);

  for j := 0 to 7 do
  begin
    x := xx[j];

    for i := 0 to n do
    begin
      x := x + (Alf * Bet * x * x / (Bet + dt * x) - Gam * x - Sig * x
        * x) * dt;

      if j > 2 then
        Series1.AddXY(i * dt, x, '', clRed)
      else
        Series1.AddXY(i * dt, x);
    end;
  end;

  Edit2.Text := IntToStr(Alf);
  Edit3.Text := IntToStr(Bet);
  Edit4.Text := IntToStr(Sig);
  Edit5.Text := IntToStr(Gam);

end;

end.
